import { Box, Button, Heading, SimpleGrid, StackItem, Text, VStack } from "@chakra-ui/react";
import React from "react";
import { compare, formatMoney, formatStandardNumber, multiply, serializeNumber } from "../lib/SerializeableBigNumber";
import { ascend, selectAscensionStats, selectMaxCollected, selectTotalCollected } from "../store/gameSlice";
import { useAppDispatch, useAppSelector } from "../store/hooks";

type Props = {};

const AchievementsTab: React.FunctionComponent<Props> = (props) => {
  const maxCollected = useAppSelector(selectMaxCollected);
  const totalCollected = useAppSelector(selectTotalCollected);
  const ascensionStats = useAppSelector(selectAscensionStats);

  const dispatch = useAppDispatch();

  const readyToAscend = compare(ascensionStats.nextAscensionPrice, totalCollected.totalCashEarned) !== 1;

  return (
    <VStack align="flex-start" spacing={8}>
      <StackItem>
        <Heading as="h2" size="md" pb={2}>
          Sell Your Company
        </Heading>

        {readyToAscend ? (
          <Box>
            <Text pb={4}>
              There are several buyers interested in your company. You can sell your company, and start a new one by
              selecting an extra perk.
            </Text>
            <VStack align="flex-start" spacing={4}>
              <Button onClick={() => dispatch(ascend("wattsUsedMultiplier"))}>
                Increase Watts Used per House by 1%
              </Button>
              <Button onClick={() => dispatch(ascend("priceMultiplier"))}>Increase Price per Watt by 10%</Button>
              <Button onClick={() => dispatch(ascend("wattsMultiplier"))}>Increase Watts Generated by 10%</Button>
              <Button onClick={() => dispatch(ascend("ideasMultiplier"))}>Increase Ideas Generated by 10%</Button>
            </VStack>
          </Box>
        ) : (
          <Text>
            You can sell your company after earning a total of ${formatMoney(ascensionStats.nextAscensionPrice)}.
          </Text>
        )}
      </StackItem>

      {ascensionStats.timesAscended > 0 && (
        <StackItem>
          <Heading as="h2" size="md" pb={2}>
            Ascension Perks
          </Heading>
          <SimpleGrid columns={2} spacingX={4}>
            <Text fontWeight="bold">Times Ascended</Text>
            <Text>{ascensionStats.timesAscended}</Text>

            <Text fontWeight="bold">Watts Used Per House Multiplier</Text>
            <Text>{formatStandardNumber(multiply(ascensionStats.wattsUsedMultiplier, serializeNumber(100)), 0)}%</Text>

            <Text fontWeight="bold">Price per Watt Multiplier</Text>
            <Text>{formatStandardNumber(multiply(ascensionStats.priceMultiplier, serializeNumber(100)), 0)}%</Text>

            <Text fontWeight="bold">Watts Generated Multiplier</Text>
            <Text>{formatStandardNumber(multiply(ascensionStats.wattsMultiplier, serializeNumber(100)), 0)}%</Text>

            <Text fontWeight="bold">Ideas Generated Multiplier</Text>
            <Text>{formatStandardNumber(multiply(ascensionStats.ideasMultiplier, serializeNumber(100)), 0)}%</Text>
          </SimpleGrid>
        </StackItem>
      )}

      <StackItem>
        <Heading as="h2" size="md" pb={2}>
          Statistics
        </Heading>
        <SimpleGrid columns={2} spacingX={4}>
          <Text fontWeight="bold">Max cash available</Text>
          <Text>${formatMoney(maxCollected.maxCashAvailable)}</Text>
          <Text fontWeight="bold">Total cash earned</Text>
          <Text>${formatMoney(totalCollected.totalCashEarned)}</Text>
          <Text fontWeight="bold">Max ideas available</Text>
          <Text>{formatStandardNumber(maxCollected.maxIdeasAvailable)} ideas</Text>
          <Text fontWeight="bold">Total ideas created</Text>
          <Text>{formatStandardNumber(totalCollected.totalIdeasGenerated)} ideas</Text>
          <Text fontWeight="bold">Total power sold</Text>
          <Text>{formatStandardNumber(totalCollected.totalWattsSold)} watts</Text>
        </SimpleGrid>
      </StackItem>
    </VStack>
  );
};

export default AchievementsTab;
